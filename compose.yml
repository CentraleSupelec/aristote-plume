services:
  assets:
    build:
      dockerfile: docker/nginx/Dockerfile.dev
      context: ./webapp
      target: assets_dev
    volumes:
      - "./webapp:/app:cached"
      - "assets-build:/data/public/build"

  nginx:
    networks:
      default:
        aliases:
          - aristote-plume-local.centralesupelec.fr
    build:
      context: ./webapp
      dockerfile: docker/nginx/Dockerfile.dev
      target: nginx_dev
    depends_on:
      - php
      - assets
    environment:
      PHP_BACKEND: php
    volumes:
      - "./webapp:/app:ro"
      - "assets-build:/data/public/build"
    ports:
      - "80:80"
      - "443:443"

  php:
    build:
      dockerfile: docker/php/Dockerfile
      context: ./webapp
      target: php_dev
    command:
      - php-fpm
    #      - -d xdebug.mode=debug # uncomment this line (and remove + restart container) to enable xdebug step debugger
    depends_on:
      - postgres
      - redis
    volumes:
      - "./webapp:/app:cached"
      - "./webapp/var/cache:/app/var/cache:delegated"
      - "./webapp/var/log:/app/var/log:delegated"
      - "./webapp/vendor:/app/vendor:delegated"

  python_api:
    build:
      dockerfile: docker/Dockerfile
      context: ./backend
      target: python_api
    command:
      - fastapi
      - dev
      - /backend/src/api/main.py
      - --host
      - 0.0.0.0
    depends_on:
      - redis
    ports:
      - "8000:8000"
    volumes:
      - "./backend/src:/backend/src:cached"
      - "./backend/config:/backend/config:cached"
      - "./backend/.env:/backend/.env:cached"
      - "./backend/pyproject.toml:/backend/pyproject.toml:cached"

  python_worker:
    build:
      dockerfile: docker/Dockerfile
      context: ./backend
      target: python_worker
    depends_on:
      - python_api
      - redis
      - minio
    volumes:
      - "./backend/src:/backend/src:cached"
      - "./backend/config:/backend/config:cached"
      - "./backend/.env:/backend/.env:cached"
      - "./backend/pyproject.toml:/backend/pyproject.toml:cached"
      - "./backend/results_cache:/backend/results_cache:delegated"

  postgres:
    image: postgres:16
    restart: on-failure
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: plume
      POSTGRES_PASSWORD: plume
      POSTGRES_DB: plume
    ports:
      - "5432:5432"

  redis:
    image: redis:7.4
    restart: on-failure
    command: redis-server --requirepass redis_password
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data

  minio:
    image: minio/minio
    command: server /data --console-address ":9001"
    networks:
      default:
        aliases:
          - plume-local.minio
    environment:
      MINIO_ROOT_USER: plume
      MINIO_ROOT_PASSWORD: plume_password
      MINIO_DOMAIN: minio
    ports:
      - "9090:9000"
      - "9091:9001"
    volumes:
      - minio-data:/data:rw

volumes:
  assets-build:
  postgres-data:
  redis-data:
  minio-data:
